akka {

  extensions = [akka.persistence.Persistence]

  actor {
    provider = "cluster"
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
    }

    serialization-bindings {
      "com.example.user.UserNodeEntity$UserCommand" = jackson-cbor
      "com.example.user.UserNodeEntity$UserReply" = jackson-cbor
      "com.example.user.UserNodeEntity$UserEvent" = jackson-cbor
      "com.example.user.UserNodeEntity$UserState" = jackson-cbor
      "com.example.user.UserNodeEntity$NodeVisitBias" = jackson-cbor
    }
  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      hostname = ${?REMOTE_HOST_NAME}
      port = 2552
      port = ${?REMOTE_PORT}
    }
  }


  cluster {
    seed-nodes = [
      "akka://RayDemo@127.0.0.1:25520"]
    roles = [user]
    sharding.role = "user"
  }

  management {
    http.port = 8557
  }
}

cinnamon.akka {
  actors {
    "/system/sharding/user/*" {
      report-by = class
      traceable = on
    }
  }
}

cinnamon.akka.dispatchers {
  basic-information {
    names = ["*"]
  }
  time-information {
    names = ["*"]
  }
}

cinnamon.akka {
  persistence.entities {
    "/system/sharding/user/*" {
      report-by = group
      command-type = on
      traceable = on
    }
  }
}

akka.persistence.journal.plugin = "cassandra-journal"
akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

cinnamon.prometheus {
  exporters += http-server
}

cinnamon.slf4j.mdc {
  log-correlation += opentracing-trace-id
  opentracing-trace-id {
    all-scopes = on
  }
}

cinnamon.opentracing {
  akka {
    trace-system-messages = off
  }

  tracer {
    sampler = rate-limiting-sampler

    rate-limiting-sampler {
      # Maximum number of sampled traces per second
      max-traces-per-second = 10
    }
  }

  http {
    debug-header = "Trace-Debug"
  }
}

cinnamon.akka.http {
  clients {
    "*:*" {
      paths {
        "*" {
          traceable = on
        }
      }
    }
  }
  servers {
    "*:*" {
      paths {
        "*" {
          traceable = on
        }
      }
    }
  }
}

# https://developer.lightbend.com/docs/telemetry/current/instrumentations/akka/akka.html#actor-remote-metrics
cinnamon.akka.remote.serialization-timing = on
cinnamon.akka.remote.failure-detector-metrics = on

# https://developer.lightbend.com/docs/telemetry/current/instrumentations/akka/akka.html#persistence-metrics
cinnamon.akka.cluster.domain-events = on
cinnamon.akka.cluster.member-events = on
cinnamon.akka.cluster.singleton-events = on

# https://developer.lightbend.com/docs/telemetry/current/instrumentations/akka/akka.html#cluster-metrics
cinnamon.akka.cluster.shard-region-info = on
cinnamon.akka.cluster.node-metrics = on

# https://developer.lightbend.com/docs/telemetry/current/instrumentations/akka/akka.html#split-brain-resolver-events
cinnamon.akka.cluster.split-brain-resolver-events = on

cassandra-journal {
  contact-points = ["localhost"]
  contact-points = ${?CASSANDRA_CONTACT_POINTS}
  port = 9042
  port = ${?CASSANDRA_PORT}
  keyspace = "userakka"
  keyspace = ${?CASSANDRA_KEYSPACE}
  authentication {
    username = "cassandra"
    username = ${?CASSANDRA_USERNAME}
    password = ${CASSANDRA_PASSWORD}
  }
}

cassandra-snapshot-store {
  contact-points = ["localhost"]
  contact-points = ${?CASSANDRA_CONTACT_POINTS}
  port = 9042
  port = ${?CASSANDRA_PORT}
  keyspace = "userakka_snapshot"
  keyspace = ${?CASSANDRA_SNAPSHOT_KEYSPACE}
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
  authentication {
    username = "cassandra"
    username = ${?CASSANDRA_USERNAME}
    password = ${CASSANDRA_PASSWORD}
  }
}

UserConfig {
  http {
    interface = "0.0.0.0"
    port = 8082
    port = ${?HTTP_PORT}
  }

  readSideConfig {
    producerParallelism = 1
    idleTimeout = 10 seconds
  }

  cassandraConfig {
    contactPoints = "127.0.0.1"
    contactPoints = ${?CASSANDRA_CONTACT_POINTS}
    port = 9042
    port = ${?CASSANDRA_PORT}
    username = "cassandra"
    username = ${?CASSANDRA_USERNAME}
    password = "nUqt36Z2sWW0"
    password = ${?CASSANDRA_PASSWORD}
  }

  userEntityParams {
    numberOfSimilarUsers = 30
    numberOfSimilarUsers = ${?NUMBER_SIMILAR_USERS}
    numberOfViewsToCheck = 30
    numberOfViewsToCheck = ${?NUMBER_VIEWS_TO_CHECK}
    labelWeightFilter = 150
    labelWeightFilter = ${?LABEL_WEIGHT_FILTER}
    nodeBookmarkBias = 5
    nodeBookmarkBias = ${?NODE_BOOKMARK_BIAS}
    userBookmarkBias = 2
    userBookmarkBias = ${?USER_BOOKMARK_BIAS}
    nodeVisitBias = 1
    nodeVisitBias = ${?NODE_VISIT_BIAS}
    nodeSearchBias = 3
    nodeSearchBias = ${?NODE_SEARCH_BIAS}
  }
}

