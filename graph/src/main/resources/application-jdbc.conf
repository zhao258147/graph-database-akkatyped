include "general.conf"

akka {

  extensions = [akka.persistence.Persistence]

  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }

  actor {
    provider = "cluster"
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
    }

    serialization-bindings {
      "com.example.graph.GraphNodeEntity$GraphNodeEvent" = jackson-json
      "com.example.graph.GraphNodeEntity$GraphNodeState" = jackson-json
      "com.example.graph.GraphNodeEntity$GraphNodeCommand" = jackson-json
      "com.example.graph.GraphNodeEntity$GraphNodeCommandReply" = jackson-json
      "com.example.graph.GraphNodeEntity$EdgeDirection" = jackson-json
      "com.example.graph.GraphNodeEntity$Edge" = jackson-json
    }
  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      hostname = ${?REMOTE_HOST_NAME}
      port = 2551
      port = ${?REMOTE_PORT}
    }
  }


  cluster {
    seed-nodes = [
      "akka://RayDemo@127.0.0.1:2551"]
    roles = ["graph"]
    sharding.role = "graph"
  }
}

//akka.discovery {
//  kubernetes-api {
//    pod-label-selector = "application=%s"
//  }
//
//  config.services = {
//    local-cluster = {
//      endpoints = [
//        {
//          host = "127.0.0.1"
//          port = 8558
//        },
//        {
//          host = "127.0.0.1"
//          port = 8559
//        }
//      ]
//    }
//  }
//}

//akka.management {
//  http {
//    http.port = 8558
//    http.port = ${?AKKA_MANAGEMENT_PORT}
//    bind-hostname= 0.0.0.0
//  }
//
//  cluster.bootstrap {
//    contact-point-discovery {
//      service-name = "local-cluster"
//      discovery-method = config
//    }
//  }
//
//    cluster.bootstrap {
//      contact-point-discovery {
//        # For the kubernetes API this value is substributed into the %s in pod-label-selector
//        service-name = ${APPLICATION_NAME}
//        discovery-method = kubernetes-api
//        required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
//      }
//    }
//
//    cluster {
//      seed-nodes = []
//    }
//
//  health-checks {
//    readiness-checks {
//      # Default health check for cluster. Overwrite the setting to replace it with
//      # your implementation or set it to "" (empty string) to disable this check.
//      cluster-membership = "akka.management.cluster.scaladsl.ClusterMembershipCheck"
//    }
//    readiness-path = "health/ready"
//    liveness-path = "health/alive"
//  }
//}

jdbc-journal {
  slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    host = "49.233.98.34"
    host = ${?MYSQL_HOST}
    port = "3306"
    port = ${?MYSQL_PORT}
    url = "jdbc:mysql://"${slick.db.host}":"${slick.db.port}"/mysql?cachePrepStmts=true&cacheCallableStmts=true&cacheServerConfiguration=true&useLocalSessionState=true&elideSetAutoCommits=true&alwaysSendSetIsolation=false&enableQueryTimeouts=false&connectionAttributes=none&verifyServerCertificate=false&useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC&rewriteBatchedStatements=true"
    user = "root"
    user = ${?MYSQL_USER}
    password = "password"
    password = ${?MYSQL_PASSWORD}
    driver = "com.mysql.cj.jdbc.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}

GraphConfig {
  http {
    interface = "0.0.0.0"
    port = 8081
    port = ${?HTTP_PORT}
  }

  readSideConfig {
    producerParallelism = 1
    idleTimeout = 10 seconds
  }

  cassandraConfig {
    contactPoints = "127.0.0.1"
    port = 9042
  }
}

